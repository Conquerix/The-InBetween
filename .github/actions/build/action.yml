name: 'Build Modpack Action | Action'
description: 'Uses packwiz to build the modpack!'
inputs:
  release-tag:
    description: "The release tag for the modpack upload"
    required: true

runs:
  using: "composite"
  
  steps:
    - name: Check Out Git Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: 'main'

    - name: Install packwiz
      uses: supplypike/setup-bin@v3
      with:
        uri: "https://nightly.link/packwiz/packwiz/workflows/go/main/Linux%2064-bit%20x86.zip"
        name: "packwiz"
        version: "linux"

    - name: Build Modrinth Modpack
      run: |
        cd client
        packwiz modrinth export
        mv *.mrpack ../The-InBetween-${{ inputs.release-tag }}.mrpack
        cd ../server
        #packwiz modrinth export        
        #mv *.mrpack ../The-InBetween-server-${{ inputs.release-tag }}.mrpack
        echo "::notice ::⚙ Both client and server packs have been exported as .mrpack"
      shell: bash

    - name: Upload Modrinth Modpack to GitHub Releases
      run: |
        gh release upload ${{ inputs.release-tag }} *.zip \
          --repo ${{ github.repository_owner }}/${{ github.event.repository.name }} \
          --clobber
        echo "::notice ::☀ Client and server packs have been uploaded to GitHub Releases as a .mrpack"
        #rm *server*.mrpack
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
